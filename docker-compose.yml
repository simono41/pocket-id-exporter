services:
  pocketid:
    image: stonith404/pocket-id:latest
    container_name: pocket-id
    restart: unless-stopped
    env_file: .env
    volumes:
      - "./data:/app/backend/data"

    environment:
      - TRUST_PROXY=true # Set to true if a reverse proxy is in front of the container
      - VIRTUAL_HOST=pocket-id.brothertec.eu
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=pocket-id.brothertec.eu
      - LETSENCRYPT_EMAIL=admin@brothertec.eu
      - DB_PROVIDER=postgres
      - POSTGRES_CONNECTION_STRING=$POSTGRES_CONNECTION_STRING_ENV

    depends_on:
      - db

    labels:
      - "com.centurylinklabs.watchtower.enable=true"

    networks:
      - default
      - proxy
      - edge-tier

  db:
    image: postgres:17
    environment:
      POSTGRES_USER: $POSTGRES_USER_ENV
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD_ENV
      POSTGRES_DB: $POSTGRES_DB_ENV
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      default:
      dns:
        ipv4_address: 172.28.0.123
    ports:
      - "5432:5432"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  pocket-id-exporter:
    container_name: pocket-id-exporter
    build:
      context: go/.
      args:
        - GO111MODULE=off
    volumes:
      - "./data:/data"
    #ports:
    #  - "3000:3000"
    environment:
      - TZ=Europe/Berlin
      - DB_TYPE=postgres
      - DB_CONNECTION=$DB_CONNECTION_ENV
      #- DB_TYPE=sqlite3
      #- DB_CONNECTION=./data/pocket-id.db

    depends_on:
      - db

    restart: always

    networks:
      default:
      dns:
        ipv4_address: 172.28.0.93

networks:
  dns:
    name: dns
    external: true
  proxy:
    name: nginx-proxy
    external: true
  edge-tier:
    name: edge
    external: true
